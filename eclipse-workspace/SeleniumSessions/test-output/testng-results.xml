<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="2" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="16756" started-at="2020-05-25T19:00:32Z" finished-at="2020-05-25T19:00:49Z">
    <groups>
      <group name="Title">
        <method signature="GoogleAssert.googleLogoTest()[pri:1, instance:SeleniumPractice.GoogleAssert@3aeaafa6]" name="googleLogoTest" class="SeleniumPractice.GoogleAssert"/>
      </group> <!-- Title -->
    </groups>
    <test name="Default test" duration-ms="16756" started-at="2020-05-25T19:00:32Z" finished-at="2020-05-25T19:00:49Z">
      <class name="SeleniumPractice.GoogleAssert">
        <test-method status="PASS" signature="setUp()[pri:0, instance:SeleniumPractice.GoogleAssert@3aeaafa6]" name="setUp" is-config="true" duration-ms="8064" started-at="2020-05-25T19:00:32Z" finished-at="2020-05-25T19:00:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="googleTitle()[pri:0, instance:SeleniumPractice.GoogleAssert@3aeaafa6]" name="googleTitle" duration-ms="16" started-at="2020-05-25T19:00:40Z" finished-at="2020-05-25T19:00:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- googleTitle -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:SeleniumPractice.GoogleAssert@3aeaafa6]" name="tearDown" is-config="true" duration-ms="660" started-at="2020-05-25T19:00:40Z" finished-at="2020-05-25T19:00:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:SeleniumPractice.GoogleAssert@3aeaafa6]" name="setUp" is-config="true" duration-ms="6463" started-at="2020-05-25T19:00:41Z" finished-at="2020-05-25T19:00:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="googleLogoTest()[pri:1, instance:SeleniumPractice.GoogleAssert@3aeaafa6]" name="googleLogoTest" duration-ms="41" started-at="2020-05-25T19:00:48Z" finished-at="2020-05-25T19:00:48Z">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"logo-doodle-iamge"}
  (Session info: chrome=83.0.4103.61)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.0.0-alpha-5', revision: 'b3a0d621cc'
System info: host: 'DESKTOP-DLGL6VP', ip: '192.168.1.72', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_231'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 83.0.4103.61, chrome: {chromedriverVersion: 83.0.4103.39 (ccbf011cb2d2b..., userDataDir: C:\Users\makka\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:54254}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: ab4187bac7e829943f1c68c1f29cdd07
*** Element info: {Using=xpath, value=logo-doodle-iamge}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"logo-doodle-iamge"}
  (Session info: chrome=83.0.4103.61)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.0.0-alpha-5', revision: 'b3a0d621cc'
System info: host: 'DESKTOP-DLGL6VP', ip: '192.168.1.72', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_231'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 83.0.4103.61, chrome: {chromedriverVersion: 83.0.4103.39 (ccbf011cb2d2b..., userDataDir: C:\Users\makka\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:54254}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: ab4187bac7e829943f1c68c1f29cdd07
*** Element info: {Using=xpath, value=logo-doodle-iamge}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:196)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:129)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:161)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:582)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:333)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:451)
at org.openqa.selenium.By$ByXPath.findElement(By.java:394)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:325)
at SeleniumPractice.GoogleAssert.googleLogoTest(GoogleAssert.java:44)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- googleLogoTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:SeleniumPractice.GoogleAssert@3aeaafa6]" name="tearDown" is-config="true" duration-ms="1482" started-at="2020-05-25T19:00:48Z" finished-at="2020-05-25T19:00:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- SeleniumPractice.GoogleAssert -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
